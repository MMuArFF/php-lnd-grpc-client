<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

namespace Lnrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>lnrpc.PendingChannelResponse</code>
 */
class PendingChannelResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int64 total_limbo_balance = 1[json_name = "total_limbo_balance"];</code>
     */
    private $total_limbo_balance = 0;
    /**
     * <code>repeated .lnrpc.PendingChannelResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    private $pending_open_channels;
    /**
     * <code>repeated .lnrpc.PendingChannelResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    private $pending_closing_channels;
    /**
     * <code>repeated .lnrpc.PendingChannelResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    private $pending_force_closing_channels;

    public function __construct() {
        \GPBMetadata\Rpc::initOnce();
        parent::__construct();
    }

    /**
     * <code>int64 total_limbo_balance = 1[json_name = "total_limbo_balance"];</code>
     */
    public function getTotalLimboBalance()
    {
        return $this->total_limbo_balance;
    }

    /**
     * <code>int64 total_limbo_balance = 1[json_name = "total_limbo_balance"];</code>
     */
    public function setTotalLimboBalance($var)
    {
        GPBUtil::checkInt64($var);
        $this->total_limbo_balance = $var;
    }

    /**
     * <code>repeated .lnrpc.PendingChannelResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    public function getPendingOpenChannels()
    {
        return $this->pending_open_channels;
    }

    /**
     * <code>repeated .lnrpc.PendingChannelResponse.PendingOpenChannel pending_open_channels = 2[json_name = "pending_open_channels"];</code>
     */
    public function setPendingOpenChannels(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Lnrpc\PendingChannelResponse_PendingOpenChannel::class);
        $this->pending_open_channels = $arr;
    }

    /**
     * <code>repeated .lnrpc.PendingChannelResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    public function getPendingClosingChannels()
    {
        return $this->pending_closing_channels;
    }

    /**
     * <code>repeated .lnrpc.PendingChannelResponse.ClosedChannel pending_closing_channels = 3[json_name = "pending_closing_channels"];</code>
     */
    public function setPendingClosingChannels(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Lnrpc\PendingChannelResponse_ClosedChannel::class);
        $this->pending_closing_channels = $arr;
    }

    /**
     * <code>repeated .lnrpc.PendingChannelResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    public function getPendingForceClosingChannels()
    {
        return $this->pending_force_closing_channels;
    }

    /**
     * <code>repeated .lnrpc.PendingChannelResponse.ForceClosedChannel pending_force_closing_channels = 4[json_name = "pending_force_closing_channels"];</code>
     */
    public function setPendingForceClosingChannels(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Lnrpc\PendingChannelResponse_ForceClosedChannel::class);
        $this->pending_force_closing_channels = $arr;
    }

}

